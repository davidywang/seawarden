#export param.txt
name <- paste0(folder, site$farm_id[i], '_', site$ORIG_FID[i], '_param_', site$Species[i], '.txt')
write.table(param, name, sep = "\t", row.names=FALSE, col.names=FALSE, quote = FALSE)
#export total_waste.txt
name <- paste0(folder, site$farm_id[i], '_', site$ORIG_FID[i], '_total_waste_', site$Species[i], '.txt')
write.table(waste, name, sep = "\t", row.names=FALSE, col.names=TRUE, quote = FALSE)}
library(dplyr)
#create one csv per farm site
farmsites <- read.csv('../r_rac/master_inventory - Farm_Sites.csv', header=TRUE, sep=",")
sites <- farmsites$farm_site
#sites <-117
sites <-117
rac_folder <- '../r_rac/rac_seabass/'
site_folder <- '/Bass_population/Outputs/Out_csv/'
rac_folder_2 <- '../r_rac/rac_bream/'
site_folder_2 <- '/Bream_population/Outputs/Out_csv/'
#function to convert RAC predictions to C, N, P
waste_compiler <- function(rac_folder, site_folder, i){
compiled <- read.csv(paste0(rac_folder, 'output_compiled/site_', i, '_compiled.csv'), header=TRUE, sep=",")
Pexc <- compiled$faeces_p*.4 + compiled$faeces_l*2.3 + compiled$faeces_c*0
Nexc <- compiled$faeces_p*15.9 + compiled$faeces_l*2.6 + compiled$faeces_c*0
Cexc <- compiled$faeces_p*54.5 + compiled$faeces_l*77 + compiled$faeces_c*40
Pwst <- compiled$feed_p*.4 + compiled$feed_l*2.3 + compiled$feed_c*0
Nwst <- compiled$feed_p*15.9 + compiled$feed_l*2.6 + compiled$feed_c*0
Cwst <- compiled$feed_p*54.5 + compiled$feed_l*77 + compiled$feed_c*40
compiled <- data.frame(cbind(compiled$day, Pexc, Nexc, Cexc, Pwst, Nwst, Cwst))
#colnames(compiled) <- c("Day", "Pexc (g)", "Nexc (g)", "Cexc (g)", "Pwst (g)", "Nwst (g)", "Cwst (g)")
#colnames(compiled) <- c("Day", "Pexc (g)", "Nexc (g)", "Cexc (g)", "Pwst (g)", "Nwst (g)", "Cwst (g)")
harvest <-  read.csv(paste0(rac_folder, 'site_', i, site_folder, 'Days_to_commercial_size.csv'))
harvest <- harvest %>% select(3)
harvest <- harvest[[1]]
compiled <- compiled[1:harvest,]
name <- paste0(rac_folder, 'output_waste/', i, '_total_waste.csv')
write.table(compiled, file = name, row.names=FALSE, col.names = TRUE, sep=",")}
#prepare total waste conversions for all sites
for (i in sites){
waste_compiler(rac_folder, site_folder, i)
waste_compiler(rac_folder_2, site_folder_2, i)}
#generate txt files specific to net pens of a farm site
folder <- "../r_ficim/"
site_id = sites
site <- read.csv(paste0(folder, 'FiCIM - ', site_id, '.csv'), header=TRUE, sep=",", stringsAsFactors = FALSE)
#index <- nrow(site) - 1 #remove last row
#load param template
param <- read.csv(paste0(folder, 'FiCIM - Param.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
#load date template
date <- read.csv(paste0(folder, 'FiCIM - Julian_Day.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
hr <- read.csv(paste0(folder, 'FiCIM - Julian_Hr.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
#load bath and current data
bath <- "../data_bath/bath_txt/"
current <- "../data_current/current_txt/"
#copy bath and current data
file.copy(paste0(bath, site_id, "_bath.txt"), folder, overwrite = TRUE) #xport bath
#file.copy(paste0(current, site_id, "_current.txt"), folder, overwrite = TRUE) #export current
#add date to current data
c <- read.delim(paste0(current, site_id, "_current.txt"), header = FALSE, sep = "\t")
h <- rep(hr, nrow(c)/24)
d <- rep(date$V4, each = 24) + unlist(h)
c <- cbind(d, c)
c <- c %>% rename("Julian Hour" = d, "u (m/s)" = V1, "v (m/s)" = V2)
name <- paste0(folder, site_id, '_current.txt')
write.table(c, name, sep = "\t", row.names=FALSE, col.names=TRUE, quote = FALSE)
#generate txt files
index = 1
for (i in 1:index){
#load total_waste.csv
name <- paste0("/Users/Zack/0_seawarden/r_rac/rac_", site$Species[i], '/output_waste/', site$farm_id[i], '_total_waste.csv')
waste <- read.csv(name, header=TRUE, sep=",", stringsAsFactors = FALSE)
#param.txt
param$V1[2] <- nrow(waste) #days
param$V2[2] <- site$Species.Index[i] #species
param$V3[2] <- site$ORIG_FID[i] #cage number
param$V4[2] <- site$Cgx[i] #cage position
param$V5[2] <- site$Cgy[i] #cage position
param$V1[6] <- 0 #0 = no bath
param$V2[6] <- -20 #depth (meters)
#reduce total waste to net pen
#date %>% rename("Day" = V1) ?
waste <- waste[2:7] * as.numeric(site$Percentage[i]) #reduce waste total to net pen size
waste <- round(waste, 5)
waste <- cbind(date$V4[1:nrow(waste)], waste) #add julian date, combine with waste
names(waste)[1] <- "Day"
#export param.txt
name <- paste0(folder, site$farm_id[i], '_', site$ORIG_FID[i], '_param_', site$Species[i], '.txt')
write.table(param, name, sep = "\t", row.names=FALSE, col.names=FALSE, quote = FALSE)
#export total_waste.txt
name <- paste0(folder, site$farm_id[i], '_', site$ORIG_FID[i], '_total_waste_', site$Species[i], '.txt')
write.table(waste, name, sep = "\t", row.names=FALSE, col.names=TRUE, quote = FALSE)}
library(dplyr)
library(plyr)
library(tidyverse)
url <- "http://www.fao.org/fishery/static/Data/Aquaculture_2019.1.2.zip"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
library(dplyr)
library(plyr)
library(tidyverse)
url <- "http://www.fao.org/fishery/static/Data/Aquaculture_2018.1.2.zip"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
unzip(zipfile = temp, exdir = temp2)
library(dplyr)
library(plyr)
library(tidyverse)
url <- "http://www.fao.org/fishery/static/Data/Aquaculture_2019.1.1.zip"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
library(dplyr)
library(plyr)
library(tidyverse)
url <- "http://www.fao.org/fishery/static/Data/Aquaculture_2019.1.0.zip"
temp <- tempfile()
temp2 <- tempfile()
download.file(url, temp)
unzip(zipfile = temp, exdir = temp2)
#create dataframes from CSVs
aquaculture <- read_csv(file.path(temp2, "TS_FI_AQUACULTURE.csv"))
environment <- read_csv(file.path(temp2, "CL_FI_ENVIRONMENT.csv"))
country <- read_csv(file.path(temp2, "CL_FI_COUNTRY_GROUPS.csv"))
species <- read_csv(file.path(temp2, "CL_FI_SPECIES_GROUPS.csv"))
units <- read_csv(file.path(temp2, "CL_FI_UNIT.csv"))
#select specific columns for certain CSVs
environment <- environment %>%
dplyr::select(Identifier, Name_En)
country <- country %>%
dplyr::select(UN_Code, ISO3_Code, Name_En)
species <- species %>%
dplyr::select("3Alpha_Code", Major_Group, Name_En)
units <- units %>%
dplyr::select(Code, Name_En)
library(dplyr)
#create one csv per farm site
farmsites <- read.csv('./master_inventory - Farm_Sites.csv', header=TRUE, sep=",")
sites <- as.vector(farmsites$farm_site)
#sites <- sites[1]
bream_folder <- "./rac_bream/"
site_folder_bream <- '/Bream_population/Outputs/Out_csv/'
bass_folder <- "./rac_seabass/"
site_folder_bass <- '/Bass_population/Outputs/Out_csv/'
#function to combine RAC predictions from one farm site in to one csv file
compiler <- function(rac_folder, site_folder, i, ingest_rate){
filepath <- paste0(rac_folder, 'site_', i, site_folder)
#load csv files
pop <- read.csv(paste0(filepath, 'population.csv'), header=TRUE, sep=",")
faeces_c <- read.csv(paste0(filepath, 'faeces_production_Carbohydrates.csv'), header=TRUE, sep=",")
faeces_l <- read.csv(paste0(filepath, 'faeces_production_Lipids.csv'), header=TRUE, sep=",")
faeces_p <- read.csv(paste0(filepath, 'faeces_production_Proteins.csv'), header=TRUE, sep=",")
ingest <- read.csv(paste0(filepath, 'actual_ingestion.csv'), header=TRUE, sep=",")
weight <- read.csv(paste0(filepath, 'weight.csv'), header=TRUE, sep=",")
#extract columns
pop <- pop %>% select(x)
faeces_c <- faeces_c %>% select(X, V1)
faeces_l <- faeces_l %>% select(V1)
faeces_p <- faeces_p %>% select(V1)
feed_c <- ingest %>% select(V1) * ingest_rate * .19 * pop[1,] / 1000
feed_l <- ingest %>% select(V1) * ingest_rate * .21 * pop[1,] / 1000
feed_p <- ingest %>% select(V1) * ingest_rate * .44 * pop[1,] / 1000
weight <- weight %>% select(V1) %>% slice(1:nrow(faeces_c))
#compile columns to new dataframe
compiled <- cbind(faeces_c, faeces_l, faeces_p, feed_c, feed_l, feed_p, weight)
#rename columns
colnames(compiled) <- c("day", "faeces_c", "faeces_l", "faeces_p", "feed_c", "feed_l", "feed_p", "weight")
#write csv
name <- paste0(rac_folder, 'output_compiled/site_', i, '_compiled.csv')
write.table(compiled, file = name, row.names=FALSE, col.names = TRUE, sep=",")}
for (i in sites){
compiler(bream_folder, site_folder_bream, i, 1.3) #.7
compiler(bass_folder, site_folder_bass, i, 1.05)} #.95
#function to combine farm site csv files to single csv
compiler_all <- function(rac_folder, site_folder, i){
#load csv files
id <- unlist(strsplit(i, "_"))[2]
harvest <-  read.csv(paste0(rac_folder, 'site_', id, site_folder, 'Days_to_commercial_size.csv'))
compiled <- read.csv(paste0(rac_folder, 'output_compiled/', i), header=TRUE, sep=",")
#extract columns
harvest <- harvest %>% select(3)
harvest <- harvest[[1]]
#sum rows by days of harvest
compiled <- compiled[1:harvest,] %>% select(2, 3, 4, 5, 6, 7)
compiled <- round(colSums(compiled))
compiled <- as.vector(c(id, compiled, harvest))}
#combine all
names <- c("site_ID", "faeces_c", "faeces_l", "faeces_p", "feed_c", "feed_l", "feed_p", "harvest day") #colnames
#bream
sites <- list.files(paste0(bream_folder, 'output_compiled/'), pattern = '.csv')
combined = list()
for (i in sites){combined[[i]] <- compiler_all(bream_folder, site_folder_bream, i)}
combined_df<-data.frame(do.call(rbind, combined))
colnames(combined_df) <- names
#export dataframe as csv
write.table(combined_df, file = paste0('./combined_bream.csv'), row.names=FALSE, col.names = TRUE, sep=",")
#bass
sites <- list.files(paste0(bass_folder, 'output_compiled/'), pattern = '.csv')
combined = list()
for (i in sites){combined[[i]] <- compiler_all(bass_folder, site_folder_bass, i)}
combined_df<-data.frame(do.call(rbind, combined))
colnames(combined_df) <- names
#export dataframe as csv
write.table(combined_df, file = paste0('./combined_seabass.csv'), row.names=FALSE, col.names = TRUE, sep=",")
library(RAC)
library(dplyr)
library(zoo) #index function
trace(Bream_pop_main,edit=T) #delete selector = "y"
#load master files - LOCAL or AWS
rac_folder <- "/Users/Zack/0_seawarden/r_rac/rac_bream/"
# rac_folder <- "/Users/Administrator/Documents/GitHub/seawarden/r_rac/rac_bream/"
farmsites <- read.csv('./master_inventory - Farm_Sites.csv', header=TRUE, sep=",")
sites <- as.vector(farmsites$farm_site)
#sites <- sites[1]
sites <- sites[49]
#sites <- 54
#sites <- sites[1:28]
# sites <- sites[29:56]
# sites <- sites[57:84]
# sites <- sites[85:112]
# sites <- sites[113:140]
# sites <- sites[141:168]
# sites <- sites[169:196]
# sites <- sites[197:209]
# #test 1
# stocking = 24
# harvest = 530
# #test 2
# stocking = 6
# harvest = 400
# #test 3
# stocking = 5
# harvest = 350
# #test 4
# stocking = 40
# harvest = 300
#test 5
stocking = 10
harvest = 350
k0 = 0.00072
#k0 = 0.00120 #updated
sim <- 10
sd = 1
start <- "1/3/2018" #day, month, year
end <- "20/12/2019"
#generate prep files for all sites
master_files <- paste0(rac_folder, 'master_files/master_RAC - ')
sst_folder <- './sst/'
sst_list <- list.files(sst_folder, pattern = '.csv')
#prep files to generate feeding tables
feeding_prep <- read.csv(paste0(master_files, 'Feeding_Prep.csv'), header=TRUE, sep=",")
#files for both steps
population <- read.csv(paste0(master_files, 'Pop_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
parameters <- read.csv(paste0(master_files, 'Param_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
management <- read.csv(paste0(master_files, 'Management.csv'), header=FALSE, sep=",")
food <- read.csv(paste0(master_files, 'Food_Characterization.csv'), header=FALSE, sep=",")
# #create folder for each site, #add SST data
for (i in sites){
#create a folder for each site
site_folder <- paste0(rac_folder, 'site_', i, '/')
dir.create(site_folder)
Bream_pop_skeleton(site_folder)
#add SST data
orglocation <- paste0(sst_folder, i, '_sst.csv')
newlocation <- paste0(site_folder, 'Bream_population/Inputs/Forcings/')
file.copy(from=orglocation, to=newlocation, overwrite = TRUE, recursive = FALSE, copy.mode = TRUE)
file.remove(paste0(newlocation, 'Water_temperature.csv'))
file.rename(paste0(newlocation, i, '_sst.csv'), paste0(newlocation, 'Water_temperature.csv'))}
#load prep files for each site
#generate Population.csv for each site
for (i in index(sites)){
column <- i + 4
export <- population %>% select(1, 2, column, 3, 4)
export[9, 3] = sim
export[2, 3] = stocking
export[3, 3] = sd
site <- (population %>% select(column))[1,]
output <- paste0(rac_folder, 'site_', site, '/Bream_population/Inputs/Parameters/Population.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Parameters.csv for each site
for (i in sites){
export <- parameters %>% select(1, 2, 5, 3, 4) #5 prep parameters
export[12, 3] = k0
export[23, 3] = start
export[24, 3] = end
export[26, 3] = harvest
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Parameters/Parameters.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Feeding.csv for each site
for (i in sites){
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Feeding.csv')
write.table(feeding_prep, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Management.csv for each site
for (i in sites){
export <- management %>% select(1, 2, 3)
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Population_management/Management.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Food_Characterization.csv for each site
for (i in sites){
export <- food %>% select(2, 1)
export <- export[-1,] #drop header
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Food_Characterization.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
for (i in sites){
userpath <- paste0(rac_folder, "site_", i)
setwd(userpath) #working directory
forcings <- Bream_pop_dataloader(userpath) #load environmental variables
output <- Bream_pop_main(userpath, forcings)} #run growth model
library(RAC)
library(dplyr)
library(zoo) #index function
trace(Bream_pop_main,edit=T) #delete selector = "y"
#load master files - LOCAL or AWS
rac_folder <- "/Users/Zack/0_seawarden/r_rac/rac_bream/"
# rac_folder <- "/Users/Administrator/Documents/GitHub/seawarden/r_rac/rac_bream/"
farmsites <- read.csv('./master_inventory - Farm_Sites.csv', header=TRUE, sep=",")
sites <- as.vector(farmsites$farm_site)
sites <- sites[1:3]
#sites <- sites[49]
#sites <- 54
#sites <- sites[1:28]
# sites <- sites[29:56]
# sites <- sites[57:84]
# sites <- sites[85:112]
# sites <- sites[113:140]
# sites <- sites[141:168]
# sites <- sites[169:196]
# sites <- sites[197:209]
# #test 1
# stocking = 24
# harvest = 530
# #test 2
# stocking = 6
# harvest = 400
# #test 3
# stocking = 5
# harvest = 350
# #test 4
# stocking = 40
# harvest = 300
#test 5
stocking = 10
harvest = 350
k0 = 0.00072
#k0 = 0.00120 #updated
sim <- 10
sd = 1
start <- "1/3/2018" #day, month, year
end <- "20/12/2019"
#generate prep files for all sites
master_files <- paste0(rac_folder, 'master_files/master_RAC - ')
sst_folder <- './sst/'
sst_list <- list.files(sst_folder, pattern = '.csv')
#prep files to generate feeding tables
feeding_prep <- read.csv(paste0(master_files, 'Feeding_Prep.csv'), header=TRUE, sep=",")
#files for both steps
population <- read.csv(paste0(master_files, 'Pop_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
parameters <- read.csv(paste0(master_files, 'Param_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
management <- read.csv(paste0(master_files, 'Management.csv'), header=FALSE, sep=",")
food <- read.csv(paste0(master_files, 'Food_Characterization.csv'), header=FALSE, sep=",")
# #create folder for each site, #add SST data
for (i in sites){
#create a folder for each site
site_folder <- paste0(rac_folder, 'site_', i, '/')
dir.create(site_folder)
Bream_pop_skeleton(site_folder)
#add SST data
orglocation <- paste0(sst_folder, i, '_sst.csv')
newlocation <- paste0(site_folder, 'Bream_population/Inputs/Forcings/')
file.copy(from=orglocation, to=newlocation, overwrite = TRUE, recursive = FALSE, copy.mode = TRUE)
file.remove(paste0(newlocation, 'Water_temperature.csv'))
file.rename(paste0(newlocation, i, '_sst.csv'), paste0(newlocation, 'Water_temperature.csv'))}
#load prep files for each site
#generate Population.csv for each site
for (i in index(sites)){
column <- i + 4
export <- population %>% select(1, 2, column, 3, 4)
export[9, 3] = sim
export[2, 3] = stocking
export[3, 3] = sd
site <- (population %>% select(column))[1,]
output <- paste0(rac_folder, 'site_', site, '/Bream_population/Inputs/Parameters/Population.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Parameters.csv for each site
for (i in sites){
export <- parameters %>% select(1, 2, 5, 3, 4) #5 prep parameters
export[12, 3] = k0
export[23, 3] = start
export[24, 3] = end
export[26, 3] = harvest
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Parameters/Parameters.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Feeding.csv for each site
for (i in sites){
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Feeding.csv')
write.table(feeding_prep, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Management.csv for each site
for (i in sites){
export <- management %>% select(1, 2, 3)
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Population_management/Management.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Food_Characterization.csv for each site
for (i in sites){
export <- food %>% select(2, 1)
export <- export[-1,] #drop header
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Food_Characterization.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
for (i in sites){
userpath <- paste0(rac_folder, "site_", i)
setwd(userpath) #working directory
forcings <- Bream_pop_dataloader(userpath) #load environmental variables
output <- Bream_pop_main(userpath, forcings)} #run growth model
library(RAC)
library(dplyr)
library(zoo) #index function
trace(Bream_pop_main,edit=T) #delete selector = "y"
#load master files - LOCAL or AWS
rac_folder <- "/Users/Zack/0_seawarden/r_rac/rac_bream/"
# rac_folder <- "/Users/Administrator/Documents/GitHub/seawarden/r_rac/rac_bream/"
farmsites <- read.csv('./master_inventory - Farm_Sites.csv', header=TRUE, sep=",")
sites <- as.vector(farmsites$farm_site)
sites <- sites[1:49]
#sites <- sites[1:28]
# sites <- sites[29:56]
# sites <- sites[57:84]
# sites <- sites[85:112]
# sites <- sites[113:140]
# sites <- sites[141:168]
# sites <- sites[169:196]
# sites <- sites[197:209]
# #test 1
# stocking = 24
# harvest = 530
# #test 2
# stocking = 6
# harvest = 400
# #test 3
# stocking = 5
# harvest = 350
# #test 4
# stocking = 40
# harvest = 300
#test 5
stocking = 10
harvest = 350
k0 = 0.00072
#k0 = 0.00120 #updated
sim <- 10
sd = 1
start <- "1/3/2018" #day, month, year
end <- "20/12/2019"
#generate prep files for all sites
master_files <- paste0(rac_folder, 'master_files/master_RAC - ')
sst_folder <- './sst/'
sst_list <- list.files(sst_folder, pattern = '.csv')
#prep files to generate feeding tables
feeding_prep <- read.csv(paste0(master_files, 'Feeding_Prep.csv'), header=TRUE, sep=",")
#files for both steps
population <- read.csv(paste0(master_files, 'Pop_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
parameters <- read.csv(paste0(master_files, 'Param_Bream.csv'), header=FALSE, sep=",", stringsAsFactors = FALSE)
management <- read.csv(paste0(master_files, 'Management.csv'), header=FALSE, sep=",")
food <- read.csv(paste0(master_files, 'Food_Characterization.csv'), header=FALSE, sep=",")
# #create folder for each site, #add SST data
for (i in sites){
#create a folder for each site
site_folder <- paste0(rac_folder, 'site_', i, '/')
dir.create(site_folder)
Bream_pop_skeleton(site_folder)
#add SST data
orglocation <- paste0(sst_folder, i, '_sst.csv')
newlocation <- paste0(site_folder, 'Bream_population/Inputs/Forcings/')
file.copy(from=orglocation, to=newlocation, overwrite = TRUE, recursive = FALSE, copy.mode = TRUE)
file.remove(paste0(newlocation, 'Water_temperature.csv'))
file.rename(paste0(newlocation, i, '_sst.csv'), paste0(newlocation, 'Water_temperature.csv'))}
#load prep files for each site
#generate Population.csv for each site
for (i in index(sites)){
column <- i + 4
export <- population %>% select(1, 2, column, 3, 4)
export[9, 3] = sim
export[2, 3] = stocking
export[3, 3] = sd
site <- (population %>% select(column))[1,]
output <- paste0(rac_folder, 'site_', site, '/Bream_population/Inputs/Parameters/Population.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Parameters.csv for each site
for (i in sites){
export <- parameters %>% select(1, 2, 5, 3, 4) #5 prep parameters
export[12, 3] = k0
export[23, 3] = start
export[24, 3] = end
export[26, 3] = harvest
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Parameters/Parameters.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Feeding.csv for each site
for (i in sites){
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Feeding.csv')
write.table(feeding_prep, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Management.csv for each site
for (i in sites){
export <- management %>% select(1, 2, 3)
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Population_management/Management.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
#generate Food_Characterization.csv for each site
for (i in sites){
export <- food %>% select(2, 1)
export <- export[-1,] #drop header
output <- paste0(rac_folder, 'site_', i, '/Bream_population/Inputs/Forcings/Food_Characterization.csv')
write.table(export, file = output, row.names=FALSE, col.names = FALSE, sep=",")}
for (i in sites){
userpath <- paste0(rac_folder, "site_", i)
setwd(userpath) #working directory
forcings <- Bream_pop_dataloader(userpath) #load environmental variables
output <- Bream_pop_main(userpath, forcings)} #run growth model
